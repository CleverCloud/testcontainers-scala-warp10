name: release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The release version"
        required: true
      branch:
        description: "The branch to release from"
        required: true
        default: "master"

jobs:
  release-scala-2-13:
    runs-on: ubuntu-latest
    steps:
      - name: checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup sbt launcher
        uses: sbt/setup-sbt@v1

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.PGP_SECRET }}
          passphrase: ${{ secrets.PGP_PASSPHRASE }}

      - name: GPG user IDs
        run: |
          echo "fingerprint: ${{ steps.import_gpg.outputs.fingerprint }}"
          echo "keyid:       ${{ steps.import_gpg.outputs.keyid }}"
          echo "name:        ${{ steps.import_gpg.outputs.name }}"
          echo "email:       ${{ steps.import_gpg.outputs.email }}"

      - name: run tests
        run: sbt ++2.13 test

      - name: publish release
        run: sbt ++2.13 publishSigned
        env:
          RELEASE_VERSION: ${{ github.event.inputs.version }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          OSSRH_SECRETKEY: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          OSSRH_SECRETKEY_PASSWORD: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

  release-scala-3:
    runs-on: ubuntu-latest
    steps:
      - name: checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup sbt launcher
        uses: sbt/setup-sbt@v1

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.PGP_SECRET }}
          passphrase: ${{ secrets.PGP_PASSPHRASE }}

      - name: GPG user IDs
        run: |
          echo "fingerprint: ${{ steps.import_gpg.outputs.fingerprint }}"
          echo "keyid:       ${{ steps.import_gpg.outputs.keyid }}"
          echo "name:        ${{ steps.import_gpg.outputs.name }}"
          echo "email:       ${{ steps.import_gpg.outputs.email }}"

      - name: run tests
        run: sbt ++3.6 test

      - name: publish release
        run: sbt ++3.6 publishSigned
        env:
          RELEASE_VERSION: ${{ github.event.inputs.version }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          OSSRH_SECRETKEY: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          OSSRH_SECRETKEY_PASSWORD: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

      - name: Create credentials and Sonatype settings
        run: |
          mkdir -p ~/.sbt/1.0
          cat > ~/.sbt/1.0/sonatype.sbt <<EOF
          credentials += Credentials("Sonatype Nexus Repository Manager",
            "s01.oss.sonatype.org",
            "${{ secrets.OSSRH_USERNAME }}",
            "${{ secrets.OSSRH_TOKEN }}")
          EOF

      - name: publish sonatypeRelease
        run: sbt ++3.6 sonatypeRelease
        env:
          RELEASE_VERSION: ${{ github.event.inputs.version }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          OSSRH_SECRETKEY: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          OSSRH_SECRETKEY_PASSWORD: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
